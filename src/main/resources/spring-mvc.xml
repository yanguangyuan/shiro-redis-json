<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
                        http://www.springframework.org/schema/beans/spring-beans.xsd  
                        http://www.springframework.org/schema/mvc 
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd 
                        http://www.springframework.org/schema/context 
                        http://www.springframework.org/schema/context/spring-context.xsd 
                        http://www.springframework.org/schema/aop 
                        http://www.springframework.org/schema/aop/spring-aop.xsd 
                        http://www.springframework.org/schema/tx 
                        http://www.springframework.org/schema/tx/spring-tx.xsd">
                        
      <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <!-- 配置Fastjson 替换原来的jackson支持 -->
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json</value>
                        <value>application/xml;charset=UTF-8</value>
                    </list>
                </property>
                <property name="features">
                    <list>
                        <value>QuoteFieldNames</value> <!-- 输出key时是否使用双引号,默认为true -->
                        <value>WriteMapNullValue</value>  <!-- 是否输出值为null的字段,默认为false -->
                        <!-- 
                        <value>DisableCircularReferenceDetect</value>
                        <value>WriteDateUseDateFormat</value> 
                        <value>WriteNullStringAsEmpty</value>  字符类型字段如果为null,输出为"",而非null 
                        <value>WriteNullNumberAsZero</value>  数值字段如果为null,输出为0,而非null 
                        <value>WriteNullBooleanAsFalse</value>  Boolean字段如果为null,输出为false,而非null 
                        <value>WriteNullListAsEmpty</value>    List字段如果为null,输出为[],而非null
                        -->
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>                   
                        
    <!-- 配置扫描spring注解时扫描的包，同时也开启了spring注解支持,一定要扫描到swagger的配置类 -->
    <context:component-scan base-package="com.ygy.shiro" />

    <!-- 开启springMVC相关注解支持 -->
   
    
    <!-- 开启spring aop 注解支持 -->
    <aop:aspectj-autoproxy/>
    


    <!-- 文件上传解析器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="resolveLazily" value="true" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
    
    <!--swagger的配置静态资源访问 -->
	<mvc:resources location="classpath:/META-INF/resources/"
		mapping="swagger-ui.html" />
	<mvc:resources location="classpath:/META-INF/resources/webjars/"
		mapping="/webjars/**" />
	<mvc:resources
		location="classpath:/META-INF/resources/webjars/springfox-swagger-ui/images"
		mapping="/images/**" />

 	<!-- 拦截器 -->
	<mvc:interceptors>
		<!--拦截所有请求 -->
		<!-- <bean class="拦截器全名" /> -->
		<!-- 文件上传  拦截认证-->
		<mvc:interceptor>
		    <!-- 文件上传拦截路径 -->
			<mvc:mapping path="/**" />
			<bean class="com.ygy.shiro.interceptor.FileInterceptor">
				<!-- 允许上传文件类型列表 -->
				<property name="fileSuffixList" value="jpg,png"/>
				<!-- 允许文件的最大大小 单位为B  1M=1048576 现2M-->
				<property name="maxSize" value="2097152"/>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>
	<!-- 自定义异常处理 -->
	<bean id="exceptionResolver" class="com.ygy.shiro.exception.MyExceptionResolver" />
</beans>
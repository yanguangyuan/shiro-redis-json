<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:apollo="http://www.ctrip.com/schema/apollo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-4.0.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
            http://www.ctrip.com/schema/apollo
            http://www.ctrip.com/schema/apollo.xsd">
    <!-- 自动扫描 -->
    <context:component-scan base-package="com.ygy.shiro" />
    <!--加载数据库连接的配置文件，也可以直接在数据源中连接 ，也可以从配置中心获取 -->
     <!-- <context:property-placeholder location="classpath:db.properties" /> -->
     
     <!-- 使用c3p0连接池注册数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
       <!-- 基础配置 -->
     <property name="jdbcUrl" value="jdbc:mysql://172.16.59.141:3306/test?characterEncoding=UTF8&amp;allowMultiQueries=true"></property>
     <property name="driverClass" value="com.mysql.jdbc.Driver"></property>
     <property name="user" value="root"></property>
     <property name="password" value="root"></property>
     <!-- 关键配置 -->
     <!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
     <property name="initialPoolSize" value="3"></property>
     <!--连接池中保留的最小连接数。Default: 2 -->
     <property name="minPoolSize" value="2"></property>
     <!--连接池中保留的最大连接数。Default: 15 -->
     <property name="maxPoolSize" value="15"></property>
     <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
     <property name="acquireIncrement" value="3"></property>
     </bean>




     <!--托管sqlSessionFactory,类在mybatis与spring整合包下 -->
     <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
          <!-- 加载mybatis的配置文件 -->
          <property name="configLocation" value="classpath:mybatis/mybatis.xml"></property>
          <property name="mapperLocations">
            <list>
                <value>classpath*:mybatis/mapper/*.xml</value>
            </list>
        </property>
          <!--数据源 -->
          <property name="dataSource" ref="dataSource"></property>
     </bean>
     
     <!-- mybatis mapper接口自动扫描、自动代理 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
       <property name="basePackage" value="com.ygy.shiro.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
    <!-- 事务管理器 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 事务传播行为 -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="page*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="is*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED" read-only="false"/>
        </tx:attributes>
    </tx:advice>

    <!-- 织入事务增强功能 -->
    <aop:config>
        <aop:pointcut id="txPointcut" expression="execution(* com.ygy.service..*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
    </aop:config>

     <!-- 配置扫描spring注解(@Component、@Controller、@Service、@Repository)时扫描的包，同时也开启了spring注解支持 -->
     <!-- 这个地方只需要扫描service包即可，因为controller包由springMVC配置扫描，mapper包由上面的mybatis配置扫描 -->
    <context:component-scan base-package="com.sys.service"></context:component-scan>

    <!-- 开启spring aop 注解支持，要想aop真正生效，还需要把切面类配置成bean -->
    <aop:aspectj-autoproxy/>

</beans>